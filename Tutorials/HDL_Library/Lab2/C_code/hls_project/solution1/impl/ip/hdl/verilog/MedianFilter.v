// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="MedianFilter_MedianFilter,hls_ip_2024_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k325t-fbg676-3,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=6.756000,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=115,HLS_SYN_LUT=527,HLS_VERSION=2024_1}" *)

module MedianFilter (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        row1,
        row2,
        row3,
        V,
        V_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] row1;
input  [7:0] row2;
input  [7:0] row3;
output  [7:0] V;
output   V_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg V_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
reg   [7:0] MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_4;
reg   [7:0] MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_5;
reg   [7:0] MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_2;
reg   [7:0] MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_3;
reg   [7:0] MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi;
reg   [7:0] MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_1;
wire   [7:0] select_ln12_fu_267_p3;
reg   [7:0] select_ln12_reg_468;
wire    ap_block_pp0_stage0_11001;
wire   [7:0] sortBuffer_15_fu_275_p3;
reg   [7:0] sortBuffer_15_reg_474;
wire   [7:0] select_ln13_1_fu_347_p3;
reg   [7:0] select_ln13_1_reg_480;
wire   [7:0] sortBuffer_16_fu_361_p3;
reg   [7:0] sortBuffer_16_reg_486;
wire   [7:0] sortBuffer_14_fu_369_p3;
reg   [7:0] sortBuffer_14_reg_492;
wire   [7:0] sortBuffer_19_fu_383_p3;
reg   [7:0] sortBuffer_19_reg_498;
wire   [7:0] select_ln15_1_fu_429_p3;
reg   [7:0] select_ln15_1_reg_504;
wire   [7:0] select_ln15_3_fu_450_p3;
reg   [7:0] select_ln15_3_reg_510;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln10_fu_129_p2;
wire   [0:0] icmp_ln10_1_fu_151_p2;
wire   [0:0] icmp_ln10_2_fu_173_p2;
wire   [7:0] sortBuffer_6_fu_143_p3;
wire   [0:0] icmp_ln11_fu_195_p2;
wire   [7:0] select_ln10_3_fu_165_p3;
wire   [0:0] icmp_ln11_1_fu_217_p2;
wire   [7:0] sortBuffer_7_fu_187_p3;
wire   [0:0] icmp_ln11_2_fu_239_p2;
wire   [7:0] select_ln11_1_fu_209_p3;
wire   [7:0] select_ln10_fu_135_p3;
wire   [0:0] icmp_ln12_fu_261_p2;
wire   [7:0] sortBuffer_9_fu_231_p3;
wire   [7:0] sortBuffer_8_fu_157_p3;
wire   [0:0] icmp_ln12_1_fu_283_p2;
wire   [7:0] select_ln11_5_fu_253_p3;
wire   [7:0] select_ln10_4_fu_179_p3;
wire   [0:0] icmp_ln12_2_fu_305_p2;
wire   [7:0] sortBuffer_11_fu_201_p3;
wire   [7:0] sortBuffer_10_fu_223_p3;
wire   [0:0] icmp_ln13_fu_327_p2;
wire   [7:0] select_ln12_3_fu_297_p3;
wire   [7:0] select_ln12_5_fu_319_p3;
wire   [0:0] icmp_ln13_1_fu_341_p2;
wire   [7:0] sortBuffer_13_fu_289_p3;
wire   [7:0] sortBuffer_12_fu_311_p3;
wire   [0:0] icmp_ln13_2_fu_355_p2;
wire   [7:0] select_ln13_fu_333_p3;
wire   [7:0] select_ln11_4_fu_245_p3;
wire   [0:0] icmp_ln14_fu_377_p2;
wire   [0:0] icmp_ln14_1_fu_391_p2;
wire   [0:0] icmp_ln14_2_fu_401_p2;
wire   [7:0] sortBuffer_17_fu_395_p3;
wire   [0:0] icmp_ln15_fu_411_p2;
wire   [7:0] select_ln15_fu_416_p3;
wire   [7:0] select_ln14_2_fu_405_p3;
wire   [0:0] icmp_ln15_1_fu_423_p2;
wire   [7:0] sortBuffer_18_fu_437_p3;
wire   [0:0] icmp_ln15_2_fu_445_p2;
wire   [0:0] icmp_ln16_fu_457_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_4 = 8'd0;
#0 MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_5 = 8'd0;
#0 MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_2 = 8'd0;
#0 MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_3 = 8'd0;
#0 MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi = 8'd0;
#0 MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_1 = 8'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi <= MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_1;
        MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_1 <= row3;
        MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_2 <= MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_3;
        MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_3 <= row2;
        MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_4 <= MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_5;
        MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_5 <= row1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln12_reg_468 <= select_ln12_fu_267_p3;
        select_ln13_1_reg_480 <= select_ln13_1_fu_347_p3;
        select_ln15_1_reg_504 <= select_ln15_1_fu_429_p3;
        select_ln15_3_reg_510 <= select_ln15_3_fu_450_p3;
        sortBuffer_14_reg_492 <= sortBuffer_14_fu_369_p3;
        sortBuffer_15_reg_474 <= sortBuffer_15_fu_275_p3;
        sortBuffer_16_reg_486 <= sortBuffer_16_fu_361_p3;
        sortBuffer_19_reg_498 <= sortBuffer_19_fu_383_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        V_ap_vld = 1'b1;
    end else begin
        V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign V = ((icmp_ln16_fu_457_p2[0:0] == 1'b1) ? select_ln15_1_reg_504 : select_ln15_3_reg_510);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign icmp_ln10_1_fu_151_p2 = ((MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_3 > MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_2) ? 1'b1 : 1'b0);

assign icmp_ln10_2_fu_173_p2 = ((MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_1 > MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi) ? 1'b1 : 1'b0);

assign icmp_ln10_fu_129_p2 = ((MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_5 > MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_4) ? 1'b1 : 1'b0);

assign icmp_ln11_1_fu_217_p2 = ((select_ln10_3_fu_165_p3 < row2) ? 1'b1 : 1'b0);

assign icmp_ln11_2_fu_239_p2 = ((sortBuffer_7_fu_187_p3 < row3) ? 1'b1 : 1'b0);

assign icmp_ln11_fu_195_p2 = ((sortBuffer_6_fu_143_p3 < row1) ? 1'b1 : 1'b0);

assign icmp_ln12_1_fu_283_p2 = ((sortBuffer_9_fu_231_p3 > sortBuffer_8_fu_157_p3) ? 1'b1 : 1'b0);

assign icmp_ln12_2_fu_305_p2 = ((select_ln11_5_fu_253_p3 > select_ln10_4_fu_179_p3) ? 1'b1 : 1'b0);

assign icmp_ln12_fu_261_p2 = ((select_ln11_1_fu_209_p3 > select_ln10_fu_135_p3) ? 1'b1 : 1'b0);

assign icmp_ln13_1_fu_341_p2 = ((select_ln12_3_fu_297_p3 > select_ln12_5_fu_319_p3) ? 1'b1 : 1'b0);

assign icmp_ln13_2_fu_355_p2 = ((sortBuffer_13_fu_289_p3 > sortBuffer_12_fu_311_p3) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_327_p2 = ((sortBuffer_11_fu_201_p3 > sortBuffer_10_fu_223_p3) ? 1'b1 : 1'b0);

assign icmp_ln14_1_fu_391_p2 = ((sortBuffer_15_reg_474 > sortBuffer_14_reg_492) ? 1'b1 : 1'b0);

assign icmp_ln14_2_fu_401_p2 = ((select_ln12_reg_468 > select_ln13_1_reg_480) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_377_p2 = ((select_ln13_fu_333_p3 > select_ln11_4_fu_245_p3) ? 1'b1 : 1'b0);

assign icmp_ln15_1_fu_423_p2 = ((select_ln15_fu_416_p3 > select_ln14_2_fu_405_p3) ? 1'b1 : 1'b0);

assign icmp_ln15_2_fu_445_p2 = ((sortBuffer_19_reg_498 > sortBuffer_18_fu_437_p3) ? 1'b1 : 1'b0);

assign icmp_ln15_fu_411_p2 = ((sortBuffer_17_fu_395_p3 > sortBuffer_16_reg_486) ? 1'b1 : 1'b0);

assign icmp_ln16_fu_457_p2 = ((select_ln15_3_reg_510 > select_ln15_1_reg_504) ? 1'b1 : 1'b0);

assign select_ln10_3_fu_165_p3 = ((icmp_ln10_1_fu_151_p2[0:0] == 1'b1) ? MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_2 : MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_3);

assign select_ln10_4_fu_179_p3 = ((icmp_ln10_2_fu_173_p2[0:0] == 1'b1) ? MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_1 : MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi);

assign select_ln10_fu_135_p3 = ((icmp_ln10_fu_129_p2[0:0] == 1'b1) ? MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_5 : MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_4);

assign select_ln11_1_fu_209_p3 = ((icmp_ln11_fu_195_p2[0:0] == 1'b1) ? row1 : sortBuffer_6_fu_143_p3);

assign select_ln11_4_fu_245_p3 = ((icmp_ln11_2_fu_239_p2[0:0] == 1'b1) ? sortBuffer_7_fu_187_p3 : row3);

assign select_ln11_5_fu_253_p3 = ((icmp_ln11_2_fu_239_p2[0:0] == 1'b1) ? row3 : sortBuffer_7_fu_187_p3);

assign select_ln12_3_fu_297_p3 = ((icmp_ln12_1_fu_283_p2[0:0] == 1'b1) ? sortBuffer_9_fu_231_p3 : sortBuffer_8_fu_157_p3);

assign select_ln12_5_fu_319_p3 = ((icmp_ln12_2_fu_305_p2[0:0] == 1'b1) ? select_ln11_5_fu_253_p3 : select_ln10_4_fu_179_p3);

assign select_ln12_fu_267_p3 = ((icmp_ln12_fu_261_p2[0:0] == 1'b1) ? select_ln11_1_fu_209_p3 : select_ln10_fu_135_p3);

assign select_ln13_1_fu_347_p3 = ((icmp_ln13_1_fu_341_p2[0:0] == 1'b1) ? select_ln12_5_fu_319_p3 : select_ln12_3_fu_297_p3);

assign select_ln13_fu_333_p3 = ((icmp_ln13_fu_327_p2[0:0] == 1'b1) ? sortBuffer_11_fu_201_p3 : sortBuffer_10_fu_223_p3);

assign select_ln14_2_fu_405_p3 = ((icmp_ln14_2_fu_401_p2[0:0] == 1'b1) ? select_ln13_1_reg_480 : select_ln12_reg_468);

assign select_ln15_1_fu_429_p3 = ((icmp_ln15_1_fu_423_p2[0:0] == 1'b1) ? select_ln15_fu_416_p3 : select_ln14_2_fu_405_p3);

assign select_ln15_3_fu_450_p3 = ((icmp_ln15_2_fu_445_p2[0:0] == 1'b1) ? sortBuffer_19_reg_498 : sortBuffer_18_fu_437_p3);

assign select_ln15_fu_416_p3 = ((icmp_ln15_fu_411_p2[0:0] == 1'b1) ? sortBuffer_16_reg_486 : sortBuffer_17_fu_395_p3);

assign sortBuffer_10_fu_223_p3 = ((icmp_ln11_1_fu_217_p2[0:0] == 1'b1) ? select_ln10_3_fu_165_p3 : row2);

assign sortBuffer_11_fu_201_p3 = ((icmp_ln11_fu_195_p2[0:0] == 1'b1) ? sortBuffer_6_fu_143_p3 : row1);

assign sortBuffer_12_fu_311_p3 = ((icmp_ln12_2_fu_305_p2[0:0] == 1'b1) ? select_ln10_4_fu_179_p3 : select_ln11_5_fu_253_p3);

assign sortBuffer_13_fu_289_p3 = ((icmp_ln12_1_fu_283_p2[0:0] == 1'b1) ? sortBuffer_8_fu_157_p3 : sortBuffer_9_fu_231_p3);

assign sortBuffer_14_fu_369_p3 = ((icmp_ln13_2_fu_355_p2[0:0] == 1'b1) ? sortBuffer_12_fu_311_p3 : sortBuffer_13_fu_289_p3);

assign sortBuffer_15_fu_275_p3 = ((icmp_ln12_fu_261_p2[0:0] == 1'b1) ? select_ln10_fu_135_p3 : select_ln11_1_fu_209_p3);

assign sortBuffer_16_fu_361_p3 = ((icmp_ln13_2_fu_355_p2[0:0] == 1'b1) ? sortBuffer_13_fu_289_p3 : sortBuffer_12_fu_311_p3);

assign sortBuffer_17_fu_395_p3 = ((icmp_ln14_1_fu_391_p2[0:0] == 1'b1) ? sortBuffer_15_reg_474 : sortBuffer_14_reg_492);

assign sortBuffer_18_fu_437_p3 = ((icmp_ln15_1_fu_423_p2[0:0] == 1'b1) ? select_ln14_2_fu_405_p3 : select_ln15_fu_416_p3);

assign sortBuffer_19_fu_383_p3 = ((icmp_ln14_fu_377_p2[0:0] == 1'b1) ? select_ln13_fu_333_p3 : select_ln11_4_fu_245_p3);

assign sortBuffer_6_fu_143_p3 = ((icmp_ln10_fu_129_p2[0:0] == 1'b1) ? MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_4 : MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_5);

assign sortBuffer_7_fu_187_p3 = ((icmp_ln10_2_fu_173_p2[0:0] == 1'b1) ? MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi : MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_1);

assign sortBuffer_8_fu_157_p3 = ((icmp_ln10_1_fu_151_p2[0:0] == 1'b1) ? MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_3 : MedianFilter_unsigned_char_unsigned_char_unsigned_char_unsigned_char_pixelWi_2);

assign sortBuffer_9_fu_231_p3 = ((icmp_ln11_1_fu_217_p2[0:0] == 1'b1) ? row2 : select_ln10_3_fu_165_p3);

endmodule //MedianFilter
